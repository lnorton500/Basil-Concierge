{
  "start": 1577900700000,
  "duration": 20,
  "room": "UD2.208 (Decroly)",
  "title": "Inspektor Gadget and traceloop",
  "subtitle": "Tracing containers syscalls using BPF",
  "track": "Containers",
  "abstract": "I will present Inspektor Gadget and traceloop, a tracing tool to trace system calls in cgroups or in containers using BPF and overwritable ring buffers.",
  "description": "Many people use the \u201cstrace\u201d tool to synchronously trace system calls using ptrace. Traceloop similarly traces system calls but asynchronously in the background, using BPF and tracing per cgroup. I\u2019ll show how it can be integrated with systemd and with Kubernetes via Inspektor Gadget.\n\nTraceloop's traces are recorded in a fast, in-memory, overwritable ring buffer like a flight recorder. As opposed to \u201cstrace\u201d, the tracing could be permanently enabled on systemd services or Kubernetes pods and inspected in case of a crash. This is like a always-on \u201cstrace in the past\u201d.\n\nTraceloop uses BPF through the gobpf library. Several new features have been added in gobpf for the needs of traceloop: support for overwritable ring buffers and swapping buffers when the userspace utility dumps the buffer.",
  "persons": [
    "Alban Crequy"
  ]
}