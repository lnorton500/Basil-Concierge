{
  "start": 1577890800000,
  "duration": 15,
  "room": "K.4.201",
  "title": "Support for mini-debuginfo in LLDB",
  "subtitle": "Debugging without installing debug-symbols, or how to read the .gnu_debugdata section.",
  "track": "Debugging Tools",
  "abstract": "<p>The \"official\" mini-debuginfo man-page describes the topic best:</p>\n\n<blockquote><p>Some systems ship pre-built executables and libraries that have a\nspecial <code>.gnu_debugdata</code> section. This feature is called MiniDebugInfo.\nThis section holds an LZMA-compressed object and is used to supply extra\nsymbols for backtraces.</p>\n\n<p>The intent of this section is to provide extra minimal debugging information\nfor use in simple backtraces. It is not intended to be a replacement for\nfull separate debugging information (see Separate Debug Files).</p></blockquote>\n\n<p>In this talk I'll explain what it took to interpret support for mini-debuginfo\nin LLDB, how we've tested it, and what to think about when implementing this\nsupport (e.g. merging <code>.symtab</code> and <code>.gnu_debugdata</code> sections).</p>",
  "description": "<p>If the <code>.symtab</code> section is stripped from the binary it might be that\nthere's a <code>.gnu_debugdata</code> section which contains a smaller <code>.symtab</code> in\norder to provide enough information to create a backtrace with function\nnames or to set and hit a breakpoint on a function name.</p>\n\n<p>My change looks for a <code>.gnu_debugdata</code> section in the ELF object file.\nThe <code>.gnu_debugdata</code> section contains a xz-compressed ELF file with a\n<code>.symtab</code> section inside. Symbols from that compressed <code>.symtab</code> section\nare merged with the main object file's <code>.dynsym</code> symbols (if any).\nIn addition we always load the <code>.dynsym</code> even if there's a <code>.symtab</code>\nsection.</p>\n\n<p>For example, the Fedora and RHEL operating systems strip their binaries\nbut keep a <code>.gnu_debugdata</code> section. While gdb already can read this\nsection, LLDB until my patch couldn't. To test this patch on a\nFedora or RHEL operating system, try to set a breakpoint on the \"help\"\nsymbol in the \"zip\" binary. Before this patch, only GDB can set this\nbreakpoint; now LLDB also can do so without installing extra debug\nsymbols:</p>\n\n<pre><code>lldb /usr/bin/zip -b -o \"b help\" -o \"r\" -o \"bt\" -- -h\n</code></pre>\n\n<p>The above line runs LLDB in batch mode and on the \"/usr/bin/zip -h\"\ntarget:</p>\n\n<pre><code>(lldb) target create \"/usr/bin/zip\"\nCurrent executable set to '/usr/bin/zip' (x86_64).\n(lldb) settings set -- target.run-args  \"-h\"\n</code></pre>\n\n<p>Before the program starts, we set a breakpoint on the \"help\" symbol:</p>\n\n<pre><code>(lldb) b help\nBreakpoint 1: where = zip`help, address = 0x00000000004093b0\n</code></pre>\n\n<p>Once the program is run and has hit the breakpoint we ask for a\nbacktrace:</p>\n\n<pre><code>(lldb) r\nProcess 10073 stopped\n* thread #1, name = 'zip', stop reason = breakpoint 1.1\n    frame #0: 0x00000000004093b0 zip`help\nzip`help:\n-&gt;  0x4093b0 &lt;+0&gt;:  pushq  %r12\n    0x4093b2 &lt;+2&gt;:  movq   0x2af5f(%rip), %rsi       ;  + 4056\n    0x4093b9 &lt;+9&gt;:  movl   $0x1, %edi\n    0x4093be &lt;+14&gt;: xorl   %eax, %eax\n\nProcess 10073 launched: '/usr/bin/zip' (x86_64)\n(lldb) bt\n* thread #1, name = 'zip', stop reason = breakpoint 1.1\n  * frame #0: 0x00000000004093b0 zip`help\n    frame #1: 0x0000000000403970 zip`main + 3248\n    frame #2: 0x00007ffff7d8bf33 libc.so.6`__libc_start_main + 243\n    frame #3: 0x0000000000408cee zip`_start + 46\n</code></pre>\n\n<p>In order to support the <code>.gnu_debugdata</code> section, one has to have LZMA\ndevelopment headers installed. The CMake section, that controls this\npart looks for the LZMA headers and enables <code>.gnu_debugdata</code> support by\ndefault if they are found; otherwise or if explicitly requested, the\nminidebuginfo support is disabled.</p>\n\n<p>GDB supports the \"mini debuginfo\" section <code>.gnu_debugdata</code> since v7.6\n(2013).</p>",
  "persons": [
    "Konrad Kleine"
  ]
}