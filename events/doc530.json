{
  "start": 1577874600000,
  "duration": 30,
  "room": "AW1.120",
  "title": "How to evolve the GNU Radio scheduler",
  "subtitle": "Embracing and breaking legacy",
  "track": "Free Software Radio",
  "abstract": "<p>GNU Radio is the widest used software radio stack for research and development on PC-style hardware, having enabled hundreds of high-rate applications. I'll discuss where its limits are, where we need to stick to GNU Radio's recipe for SDR success, and where to disruptively address its architectural shortcomings</p>",
  "description": "<p>Today's GNU Radio hits hard limits when it comes to a few things that\nare absolutely crucial for modern communication stacks: It doesn't make any\nguarantees on latency, and its architecture doesn't allow for tight integration\nwith hardware accelerators. And whilst most communications are packet-based,\npacketed data is a second-class citizen in the kingdom of sample streams that is\nGNU Radio.</p>\n\n<p>In this talk, we'll discuss why that is the case, and what can be remedied\nwithin the current framework, and what not. We'll try to assess what usage\nparadigms are worth keeping for the future of GNU Radio, and what needs to\nchange.</p>",
  "persons": [
    "Marcus M\u00fcller"
  ]
}