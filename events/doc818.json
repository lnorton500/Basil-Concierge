{
  "start": 1577869800000,
  "duration": 20,
  "room": "UD2.218A",
  "title": "Checkpointing in a real time OS for transiently-powered embedded systems",
  "subtitle": "Checkpointing in a real time OS for transiently-powered embedded systems (MSP430)",
  "track": "Internet of Things",
  "abstract": "Some constrained embedded systems cannot use batteries, those are called transiently-powered embedded systems.\nThey can be equipped with a non volatile RAM (NVRAM) and a super capacitor for gathering energy when available.\nDeveloping in such an environment is not straight.\nDuring this talk, we will expose our work on a constrained real time OS tolerant with power loss on a MSP430 based platform.\nThis platform is a MSP430FR5994 Launchpad equipped with FRAM and a super capacitor.",
  "description": "This talk deals with constrained transiently-powered embedded systems equipped with non volatile RAM (NVRAM).\nTransiently-powered systems may be autonomous sensors, sensor networks, mobile devices without batteries, systems where the use of batteries is infeasible.\nIn our case, such systems are equipped with a super capacitor that gathers energy and restitutes that energy to the system for a short time (from a few tens of milliseconds to a few minutes).\nProgramming on such a device is difficult because it operates only intermittently, as energy is available.\nSuch devices must not reboot but continue their computations all along successive powered periods, meaning that they must keep their states and values even when loosing power.\nUsing NVRAM may seem to be an easy solution, but that is not the case. Indeed, using NVRAM as a kind of RAM is likely to lead the system to an altered behaviour, an inconsistent state.\n\nOur motivation is to provide a transiently-powered computing platform to accommodate both usual sensing and transmission functions as well as as heavy as possible computations aka edge computing.\nThis platform shall abstract the use of NVRAM or at least assist the user in the design of its application.\n\nOur based test platform is an Autosar compliant open source real time OS, Trampoline (https://github.com/TrampolineRTOS/trampoline), already used inside high-end vehicles.\nTrampoline is very light, configurable, suitable for constrained devices.\nWe have made some experimentations on a MSP430FR5994 platform, it is equipped with a MSP430 and a 0.22F super capacitor.\nOur device shall start just once, and then restart from the last checkpoint on each power recovery.\n\nDuring this talk we will present the current state of our experimentations.\nThat is to say :\n- Real-time and estimation of remaining energy;\n- Task scheduling model for such devices;\n- Platform energy consumption models: start and restart;\n- Peripherals states and initializations.",
  "persons": [
    "David Garriou"
  ]
}