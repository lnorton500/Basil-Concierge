{
  "start": 1577892600000,
  "duration": 25,
  "room": "K.4.601",
  "title": "Discover UEFI with U-Boot",
  "subtitle": "",
  "track": "Open Source Firmware, BMC and Bootloader",
  "abstract": "The Unified Extensible Firmware Interface (UEFI) is the default for booting most Linux and BSD distributions. But the complexity of the UEFI standard does not offer an easy entry point for new developers. The U-Boot firmware provides a lightweight UEFI implementation. Using booting from iSCSI with U-Boot and iPXE as an example let's delve into the UEFI API.\n\nThe UEFI sub-system in U-Boot has developed from barely starting GRUB to supporting complex UEFI applications like iPXE and the EFI shell and passing most of the UEFI compliance tests for the implemented protocols and services.\n\nThe session gives an overview of the boottime and runtime services of UEFI with a focus on driver binding. The challenges of integrating the UEFI subsystem with U-Boot's infrastructure are described and an outlook is provided.\n\nQuestions this talk should answer:\n- How does the UEFI driver model work?\n- How does this integrate with U-Boot?\n- What to expect next in U-Boot's UEFI implementation?",
  "description": "",
  "persons": [
    "Heinrich Schuchardt"
  ]
}