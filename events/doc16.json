{
  "start": 1577881200000,
  "duration": 15,
  "room": "H.2215 (Ferrer)",
  "title": "A tool for Community Supported Agriculture (CSA) management, OpenOlitor",
  "subtitle": "",
  "track": "Lightning Talks",
  "abstract": "<p>OpenOlitor is a SaaS open-source tool facilitating the organization and management of CSAs (Community Supported Agriculture) communities. This\ntool covers a large spectrum of functionalities needed for CSAs such as member management, emailing, invoicing, share planning and delivery, absence\nscheduling, etc. This software is organized and monitored by an international community that promotes the tool, helps operate it and support the\ninterested communities. In order to promote the sustainability of the tool and this international community an organization based on CSS\n(Community Supported Software) has been proposed.</p>",
  "description": "<h1>1 - Introduction</h1>\n\n<p>The Community Supported Agriculture movement has grown considerably the last few years proposing a new model of food production and distribution. CSA initiatives connect producers and consumers directly. The consumer receives a basket of locally produced, fresh products on a subscription basis. Risk is shared among all participants of the community, independently of being a consumer or producer. The growing popularity of the CSA model has lead to larger sized communities. Consequently, the management effort for this organizations is becoming unaffordable on a volunteer basis.\nIn such conditions a software helping with the redundant tasks, and connecting all participants of these communities, can be particularly supportive.\nThe main motivations for the creation of OpenOlitor (OO) are to attend to the growing popularity of the CSA model with the aim of keeping the model\neconomically viable and sustainable by reducing management task time investment through building software which facilitates easy organization.</p>\n\n<h1>2 - OpenOlitor</h1>\n\n<p>OpenOlitor is a web-based, open source tool facilitating the organization and management of CSAs (Community Supported Agriculture)\ncommunities. This tool is composed of two different access points:</p>\n\n<ul>\n<li>The participant console: any member holding one or more subscriptions, has an access to this console. This displays basic information about next subscription, products that will be delivered, absences, etc.</li>\n<li>The admin console: only defined administrators can access this console. All the community management tools are available from this portal. Please, refer to the next subsection for a detailed list of functionalities.</li>\n</ul>\n\n\n<h2>2.1 - Functionalities  OpenOlitor (OO) covers the main functionalities CSAs need:</h2>\n\n<ul>\n<li>Members and people management: OO allows the management of all the current members, historical members or interested individuals. A member can be composed of multiple people. Basic information is required for every member, such us contact information, details of payment, etc.</li>\n<li>Subscription types: A member receives one or several baskets (also called shares) of products periodically. Different types of baskets are allowed. Types are defined by the community and may include delivery type, pickup or frequency, for example;</li>\n<li>Subscription management: A member can be subscribed to one or several subscriptions;</li>\n<li>Delivery management: Deliveries are prepared by the administrators. As a result shares will be created where subscriptions, delivery types, prices are calculated automatically;</li>\n<li>Billing: Automatic invoices are created for every member;</li>\n<li>Participatory task management: Some CSAs require a certain community work hours in order to be part of the community. OO can track this information and publish available tasks to the members;</li>\n<li>Absence management: Members can feed the system their pickup absences that would be taken into account automatically;</li>\n<li>Product/producer management: A CSA can have one or multiple producers and each producer can have one or more products. This information can be used for billing purposes or basket shaping purposes;</li>\n<li>Emailing: an integrated emailing functionality is provided for some of the modules already explained. This allows administrators to easily mail information to the participants, such as invoices, general announcements, etc.</li>\n<li>Payment management: SEPA and ESR payment work-flows are integrated;</li>\n</ul>\n\n\n<h2>2.2 - Basic architecture</h2>\n\n<p>The OO platform is divided in back-end and front-end:</p>\n\n<ul>\n<li>Front-end: The front-end is a Web-Application (AngularJS) accessible from any browser. A front-end application is dedicated to every CSA. The code is accessible publicly in Github:</li>\n<li>Administration portal (https://github.com/OpenOlitor/openolitor-client-admin)</li>\n<li><p>Members portal (https://github.com/OpenOlitor/openolitor-client-kundenportal)</p></li>\n<li><p>Back-end: Programmed in Scala using the Akka library for concurrency and distributed systems. A single server can be shared among multiple initiatives. The code is published on Github. Even if the server can be shared among multiple organizations, a MariaDB database is created per initiative. This model guaranties data ownership and privacy. The code is accessible publicly in Github: https://github.com/OpenOlitor/openolitor-server</p></li>\n</ul>\n\n\n<h1>3 - Current numbers</h1>\n\n<p>Currently, seven CSAs are using OpenOlitor to support their organizations in a production environment. Three more CSAs are in the process of transitioning to this digital tool. A few numbers extracted from the last two years and a half to put into perspective the work volume facilitated by OO:</p>\n\n<ul>\n<li>+/- 100'000 baskets already delivered</li>\n<li>+/- 3'000 managed deliveries, average 33 baskets per delivery</li>\n<li>+/- 3'400 subscriptions</li>\n<li>+/- 2'100 subscribers</li>\n</ul>\n\n\n<h1>4 - Hosting and Operations</h1>\n\n<p>As shown by the architecture, the database and the front-end are CSA specific but the server can be used by multiple organizations. We promote the idea of hosting communities where a group of CSAs share the costs for the hosting and the effort for the operational work. This model is currently in use for all CSAs using the software.</p>\n\n<h1>5 - Sustainability model</h1>\n\n<p>As a financial model we promote the idea of Community Supported Software (CSS). This model is directly inspired by the CSA model where all participants share the risk and responsibility of the food production. Transferring this idea to software, an organization working with OO is invited to participate on the maintenance, operation, support and further development of the software. A fixed financial contribution is defined per basket delivered. All contributions are  shared with all projects using the tool. Using this model, the effort and risk is equally shared, independently of the size of the CSA.</p>\n\n<h1>6 - Legal organizations supporting OO</h1>\n\n<p>This software is organized and monitored by an international community that promotes this tool:</p>\n\n<p>OpenOlitor International: Non legally formed organization composed by around 10 members from different European countries. This organization is in charge of the vision and principles of all interactions with the software. This group meets periodically to decide OO main features and how to evolve the platform. Everyone interested in OO is invited to join;\nOpenOlitor association: non-profit organization based in Switzerland. Legal body managing the founds received by initiatives and public sources;\nOpenOlitor operations association: Organization in charge for the operation and support of the Swiss based CSAs;\nSunu: a German based organization that promotes digitalization for CSAs. They are promoting the ue of OO as well as the operational and support for German CSAs.</p>",
  "persons": [
    "Mikel Cordovilla"
  ]
}