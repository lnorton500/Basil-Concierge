{
  "start": 1577892600000,
  "duration": 25,
  "room": "UD2.120 (Chavanne)",
  "title": "Hacking Terraform for fun and profit",
  "subtitle": "",
  "track": "Infra Management Devroom",
  "abstract": "<p>Using Terraform is often simple, extending it to do what YOU want, can be challenging (or \u201cimpossible\u201d). Want to manage unsupported resources? Maintain lots of resources? Integrate non-integrable? The talk is an advanced guide about HOW to extend, integrate and execute Terraform to get things DONE.</p>",
  "description": "<p>If you\u2019ve been using Terraform just by following the official documentation, you are not getting all from it.</p>\n\n<p>As soon as one cloud provider announces a new service or a feature, you dream that Terraform has zero-day support for it. Well, it is not always like this, and I will show what we can do about it.</p>\n\n<p>Are you using Terraform and keep asking yourself why I should copy-paste so much? What if you need to manage more than a dozen resources with Terraform (e.g., hundreds of GitHub repositories with permissions, or hundreds of IAM users and their permissions)? How can I use Terraform to manage absolutely ANY type of resource? What is beyond Terraform modules? What is a really dynamic module and what Terraform 0.12 will help us with?</p>\n\n<p>Let's see the advanced and very unusual solutions of how Terraform can be extended, integrated, executed, or merely hacked to get the job done with the help of external open-source services and integrations.</p>",
  "persons": [
    "Anton Babenko"
  ]
}