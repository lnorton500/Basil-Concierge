{
  "start": 1577875800000,
  "duration": 45,
  "room": "K.3.401",
  "title": "Rusty instruments",
  "subtitle": "Building Digital Musical Instruments with Rust and friends",
  "track": "Rust",
  "abstract": "<p>This talk will introduce the Muses project, which applies programming language theory and practice, physical computing, networking, and musicial theory to design and implementation of Digital Musical Instruments. Rust is a key ingredient in the Muses project, providing a robust and performant foundation for cross platform, desktop, and embedded system development.</p>\n\n<p>The talk will give a brief introdution to Muses project as a whole and then focus on the use of Rust in developing a selection of very different components\nin the system and its benefits for these wildy varing use cases.</p>\n\n<p>Demos of the Digitial Musical Instruments with Rust at their heart will shown through out the talk.</p>",
  "description": "<p>Controller and gesture interaction with audio and/or visual media is today ubiquitous, requiring the development of intuitive software solutions for interaction design. Designing and building these interfaces often require extensive domain expertise in audio and visual media creation, e.g. the musician, but additionally in engineering and software development. In this talk we focus on custom controller-based interactive systems for sound and musical performance, with a focus on an intuitive and simple design process that is accessible to artists.</p>\n\n<p>A large part of the software developed for these systems is low-level system code, where direct access to hardware and understandable performance are hard requirements for these systems. Historically, these systems are written in C/C++ and in the case of embedded systems C is still the language of choice. With the emergence of the system programming language Rust an alternative for developing these systems is now with us with its support for high-level features such as traits, type inference, pattern matching, and of course it's affine based type system for pointers.</p>\n\n<p>This talk will introduce the Muses project, which applies programming language theory and practice, physical computing, networking, and musical theory to design and implementation of Digital Musical Instruments. Rust is a key ingredient in the Muses project, providing a robust and performant foundation for cross platform, desktop, and embedded system development.</p>\n\n<p>A high-level overview of the schedule is:</p>\n\n<ul>\n<li> Introduction to the Muses project</li>\n<li> 100 foot view of the Muses architecture</li>\n<li> Experience using Rust for audio and interface development</li>\n<li> Demonstration</li>\n</ul>\n\n\n<p>The demonstration will include the following physical components:</p>\n\n<ul>\n<li><p> Custom interface</p>\n\n<ul>\n<li>Hardware encoders + arcade buttons</li>\n<li>Sensel touch interface with custom interface</li>\n<li>STM32 based embedded hardware platform, all running Rust</li>\n</ul>\n</li>\n<li><p> Raspberry PI for Sound</p>\n\n<ul>\n<li>Pure Data for sound synthesis</li>\n<li>Rust based driver for communicating with custom hardware</li>\n<li>Rust based Open Sound Control (OSC) server for custom control messages</li>\n</ul>\n</li>\n</ul>\n\n\n<p>The framework also includes an approach to automatically generating interfaces from a DSL for SVG interfaces, written largely in Haskell, but with a tessellation pipeline written in Rust. However, while this will be mentioned in passing it is not the intention of this talk to cover this aspect of the system in detail. (For  more information on this, see the provided link for the project website and associated papers, also linked from the site.)</p>\n\n<h2>Expected prior knowledge / intended audience</h2>\n\n<p>Knowledge of programming will be expected and prior use of C/C++, Rust, or other systems programming language would be useful.</p>\n\n<p>Audio topics will be introduced through out the talk and it is not expected that audience members have a musical background.</p>\n\n<h2>Speaker bio</h2>\n\n<p>Dr Benedict R. Gaster is an Associate Professor at University of West of England, he is the director of the Computer Science Research Centre, which within he also leads the Physical Computing group. He research focuses on the design embedded platforms for musical expression and more generally the IoT, he is the co-founder of Bristol LoRaWAN a low power wide area network for Bristol city, is the technical lead for city wide project on city pollution monitoring for communities, having developed UWE Sense a hardware platform for cheap sensing. Along with his PhD students and in collaboration with UWE's music tech department, is developing a new audio platform based on ARM micro-controllers using the Rust programming language to build faster and more robust sound!</p>\n\n<p>Previously Benedict work at Qualcomm and AMD where he was a co-designer on the programming language OpenCL, including the lead developer on AMD's OpenCL compiler. He has a PhD in computer science for his work on type systems for extensible records and variants. He has published extensively, has given numerous presentations, including ones at FOSDEM on Rust and LoRaWAN.</p>\n\n<h2>Links to some previous talks by the speaker</h2>\n\n<p>Below are are some examples of recent talks:</p>\n\n<ul>\n<li> <a href=\"https://bgaster.github.io/farm19/\">Fun with Interfaces (SVG Interfaces for Musical Expression).</a> FARM'19: 7th International Workshop on Functional Art, Music, Modeling and Design (FARM).</li>\n<li> <a href=\"https://archive.fosdem.org/2018/schedule/event/rustyarm_rust_on_embedded_platforms/\">Rustarm AKA A project looking at Rust for Embedded Systems.</a> FOSDEM\u201918.</li>\n<li> <a href=\"https://archive.fosdem.org/2017/schedule/event/lorawan/\">Outside the Block Syndicate: Translating Faust's Algebra of Blocks to the Arrows Framework</a>. International Faust Conference (IFC-18), 2018</li>\n<li> <a href=\"https://archive.fosdem.org/2017/schedule/event/lorawan/\">LoRaWAN for exploring the Internet of Things. Talk Hard: A technical, political, and cultural look at LoRaWAN for IoT.</a> FOSDEM\u201917.</li>\n</ul>",
  "persons": [
    "Benedict Gaster"
  ]
}