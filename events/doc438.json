{
  "start": 1577888400000,
  "duration": 15,
  "room": "H.2215 (Ferrer)",
  "title": "Towards decentralized alternatives for code collaboration",
  "subtitle": "Building Radicle, a peer-to-peer network for code collaboration",
  "track": "Lightning Talks",
  "abstract": "This talk will walk the audience through Radicle, a peer-to-peer network for code collaboration. It will touch on the design approach (outlined in the description) of the Radicle stack and outline the project's next steps and challenges for the coming year as we launch our network. It's narrative will also reflect the potential of distributed technology for free and open source sustainability and resilience. Radicle (http://radicle.xyz/) is a free and open source project supported by Monadic (https://monadic.xyz/).",
  "description": "Radicle is a peer-to-peer network for code collaboration. It's a decentralized collaboration environment that\u2019s designed to be:\n\n<ul>\n<li><strong>Offline first</strong> : all data, including issues, comments and other social artifacts is yours &amp; lives on your machine.</li>\n<li><strong>Peer-to-peer</strong> : with no central server or intermediary in control.</li>\n<li><strong>Cryptographically secure</strong> : user data that is tamper-proof &amp; unforgeable, using public key cryptography.</li>\n<li><strong>Programmable</strong> : developers can program the way in which they collaborate.</li>\n<li><strong>Interoperable &amp; open</strong> : reflecting the values of the open source community.</li>\n</ul>\n\n\nRadicle integrates with distributed version control systems like git and includes a high-level language with reprogrammable semantics, P2P networking for sharing application state, and flexible command line tools. Inspired by P2P protocols like <a href=\"https://www.scuttlebutt.nz/\">Secure Scuttlebutt</a>, radicle connects distributed version control with peer-to-peer networking to make collaboration a primitive \u2013 starting with git and building up an entirely peer-to-peer developer experience that encourages experimentation around how we write software together. In other words, radicle lets developers program the process of writing code, shaping their workflow around a specific project or context.\n\nLike many P2P systems, radicle uses an offline-first model. Issues, comments, and other social artifacts are stored locally as a log of events and synced automatically with your collaborators. While git repositories are already portable, social artifacts are not - radicle aims to change this. Radicle also allows you to define entirely new message types: projects, feature requests, releases, etc., each with their own event streams, metadata, and access control policies. All of this information is completely portable and self-amending in situ.\n\nMaking any kind of semantic modification to a decentralized data structure is typically difficult to coordinate and prone to forks, but radicle\u2019s programmable evaluator makes this process straightforward, safe, and immediate. Additionally, built-in aggregate signatures allow for the definition of custom security models to read or modify each chain, even to revise an access control policy.\n\nFinally, radicle comes with sensible defaults, ensuring you can be productive right away, while also giving programmers a flexible system for rolling their own software collaboration workflow. Inspired in many ways by <a href=\"https://www.gnu.org/software/emacs/\">Emacs</a>, radicle is designed as an extensible system, where developers can share their programs with one another and extend their revision control environment however they like.",
  "persons": [
    "Abbey Titcomb"
  ]
}