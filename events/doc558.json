{
  "start": 1577875800000,
  "duration": 20,
  "room": "AW1.125",
  "title": "A minimal pur object-oriented reflective language",
  "subtitle": "A minimal pur object-oriented reflective language",
  "track": "Minimalistic, Experimental and Emerging Languages",
  "abstract": "Pharo is a minimalist reflective dynamically typed object-oriented language. Pharo is inspired from Smalltalk: Its full syntax fits on a postcard.\nIts model is simple: everything is an object instance of a class, methods are all public virtual, attributes are first class objects and are protected. There is single inheritance and\ntraits. And nothing else! (see <a href=\"http://mooc.pharo.org\">http://mooc.pharo.org</a>). Still Pharo is a real language that is started to be used in industry <a href=\"http://pharo.org/success\">http://pharo.org/success</a> and <a href=\"http://consortium.pharo.org\">http://consortium.pharo.org</a>. The entire Pharo stack is MIT.\nPharo reflective core is bootstrapped from source code.  Experiences shows that we can have down to 11k (adding 2 smallint) and that a simple web app can be\ntrim down to 500 kb.",
  "description": "In this talk I will present Pharo in a nutshell: Syntax, model, but also user stories.\nI will show the vision of the project and where we want to go. I will present some key architectural choices.\nI will show some powerful features such as stack on the fly reification and their application: contextual breakpoint, on the fly program transformation.\n\nBio: I'm one of the core developer of Pharo, head of the consortium and helping consortium engineers.",
  "persons": [
    "Stephane Ducasse"
  ]
}